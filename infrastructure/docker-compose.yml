version: "3.9"

services:
  db:
    image: mysql:8.0
    env_file: .env
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER:     ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data

  backend:
    build:
      context: ..
      dockerfile: infrastructure/Dockerfile.backend
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ../backend:/app/backend
      - ../media:/app/media
    command: >
      bash -c "
        python manage.py migrate &&
        celery -A adsync worker -l info &
        celery -A adsync beat   -l info &
        gunicorn adsync.wsgi:application --bind 0.0.0.0:8000
      "
    expose: [ "8000" ]

  frontend:
    build:
      context: ..
      dockerfile: infrastructure/Dockerfile.frontend
    env_file: .env
    depends_on: [ backend ]
    volumes:
      - ../frontend/admin-console:/app
    command: >
      sh -c "npm run build && npm run preview -- --host 0.0.0.0 --port 4173"
    expose: [ "4173" ]

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../media:/media:ro
    ports:
      - "80:80"
    depends_on: [ backend, frontend ]

volumes:
  db-data:
  redis-data: